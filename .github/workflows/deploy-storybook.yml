# 워크플로우의 이름입니다. GitHub Actions에서 실행 이름으로 뜹니다.
name: Deploy Storybook to GitHub Pages

# 언제 자동 실행할지를 정의합니다.
# 여기선 main 브랜치에 push가 될 때마다 실행되도록 설정한 것입니다.
on:
  push:
    branches:
      - main # main 브랜치에 커밋될 때 실행됨

# 이 워크플로우가 GitHub 저장소에 쓰기 권한을 갖도록 설정
permissions:
  contents: write

# 실제 작업이 정의되는 영역입니다.
jobs:
  deploy: # 이 job의 이름은 deploy
    # GitHub이 제공하는 Ubuntu 리눅스 서버에서 작업을 실행합니다.
    runs-on: ubuntu-latest

    # 하나하나의 step은 명령어처럼 실행됩니다.
    steps:
      # 저장소 코드를 내려받음 (checkout)
      - name: Checkout repository
        uses: actions/checkout@v3

      # Node.js 18버전을 설치함
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18 # 사용할 Node.js 버전 지정

      # package.json의 의존성들을 설치
      - name: Install dependencies
        run: npm ci # npm install보다 더 빠르고 정확한 재현용 명령어

      # 스토리북을 정적으로 빌드 (storybook-static 폴더 생성됨)
      - name: Build Storybook
        run: npm run build-storybook # package.json에 정의된 스크립트

      # 만들어진 정적 파일을 GitHub Pages (gh-pages 브랜치)로 배포
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }} # GitHub에서 자동 제공하는 인증 토큰
          publish_dir: ./storybook-static # 이 폴더 안의 파일을 배포함
